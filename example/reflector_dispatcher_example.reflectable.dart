// This file has been generated by the reflectable package.
// https://github.com/dart-lang/reflectable.
// @dart = 2.12

import 'dart:core';
import 'reflector_dispatcher_example.dart' as prefix0;

// ignore_for_file: prefer_adjacent_string_concatenation
// ignore_for_file: prefer_collection_literals
// ignore_for_file: unnecessary_const
// ignore_for_file: implementation_imports

// ignore:unused_import
import 'package:reflectable/mirrors.dart' as m;
// ignore:unused_import
import 'package:reflectable/src/reflectable_builder_based.dart' as r;
// ignore:unused_import
import 'package:reflectable/reflectable.dart' as r show Reflectable;

final _data = <r.Reflectable, r.ReflectorData>{
  const prefix0.Reflector(): r.ReflectorData(
      <m.TypeMirror>[
        r.NonGenericClassMirrorImpl(
            r'Foo',
            r'.Foo',
            7,
            0,
            const prefix0.Reflector(),
            const <int>[0, 1, 2, 3, 4],
            const <int>[5, 6, 7, 8, 9, 0, 1, 2, 3],
            const <int>[],
            -1,
            {},
            {},
            {r'': (bool b) => (_count) => b ? prefix0.Foo(_count) : null},
            -1,
            -1,
            const <int>[-1],
            null,
            null)
      ],
      <m.DeclarationMirror>[
        r.MethodMirrorImpl(r'increment', 262146, 0, -1, -1, -1, null,
            const <int>[0], const prefix0.Reflector(), null),
        r.MethodMirrorImpl(r'decrement', 262146, 0, -1, -1, -1, null,
            const <int>[1], const prefix0.Reflector(), null),
        r.MethodMirrorImpl(r'getCount', 131074, 0, -1, -1, -1, null,
            const <int>[], const prefix0.Reflector(), null),
        r.MethodMirrorImpl(r'goTwoLess', 131074, 0, -1, -1, -1, null,
            const <int>[], const prefix0.Reflector(), null),
        r.MethodMirrorImpl(r'', 0, 0, -1, -1, -1, null, const <int>[2],
            const prefix0.Reflector(), null),
        r.MethodMirrorImpl(r'==', 131074, -1, -1, -1, -1, null, const <int>[3],
            const prefix0.Reflector(), null),
        r.MethodMirrorImpl(r'toString', 131074, -1, -1, -1, -1, null,
            const <int>[], const prefix0.Reflector(), null),
        r.MethodMirrorImpl(r'noSuchMethod', 65538, -1, -1, -1, -1, null,
            const <int>[4], const prefix0.Reflector(), null),
        r.MethodMirrorImpl(r'hashCode', 131075, -1, -1, -1, -1, null,
            const <int>[], const prefix0.Reflector(), null),
        r.MethodMirrorImpl(r'runtimeType', 131075, -1, -1, -1, -1, null,
            const <int>[], const prefix0.Reflector(), null)
      ],
      <m.ParameterMirror>[
        r.ParameterMirrorImpl(r'aNumber', 38918, 0, const prefix0.Reflector(),
            -1, -1, -1, null, null, 1, null),
        r.ParameterMirrorImpl(r'aNumber', 40966, 1, const prefix0.Reflector(),
            -1, -1, -1, null, null, null, #aNumber),
        r.ParameterMirrorImpl(r'_count', 32806, 4, const prefix0.Reflector(),
            -1, -1, -1, null, null, null, null),
        r.ParameterMirrorImpl(r'other', 32774, 5, const prefix0.Reflector(), -1,
            -1, -1, null, null, null, null),
        r.ParameterMirrorImpl(r'invocation', 32774, 7,
            const prefix0.Reflector(), -1, -1, -1, null, null, null, null)
      ],
      <Type>[prefix0.Foo],
      1,
      {
        r'==': (dynamic instance) => (x) => instance == x,
        r'toString': (dynamic instance) => instance.toString,
        r'noSuchMethod': (dynamic instance) => instance.noSuchMethod,
        r'hashCode': (dynamic instance) => instance.hashCode,
        r'runtimeType': (dynamic instance) => instance.runtimeType,
        r'increment': (dynamic instance) => instance.increment,
        r'decrement': (dynamic instance) => instance.decrement,
        r'getCount': (dynamic instance) => instance.getCount,
        r'goTwoLess': (dynamic instance) => instance.goTwoLess
      },
      {},
      null,
      [])
};

final _memberSymbolMap = null;

void initializeReflectable() {
  r.data = _data;
  r.memberSymbolMap = _memberSymbolMap;
}
